- hosts: "{{ bkpserver }}"
  #- hosts: backup3.lan,backup7.lan
  tasks:
    - name: Wait until partition is mounted
      shell: mountpoint -q /media/backupstg
      register: result
      until: result.rc == 0
      retries: 40
      delay: 5
    - debug:
        msg: "{{ result }}"

- hosts: proxmox*.lan
  vars:
    destinationstores:
      backup3.lan: store1
      backup7.lan: store2
        #destinationstore: store1
      # store1 = backup3.lan
      # store2 = backup7.lan
  tasks:
    - set_fact:
        destinationstore: "{{ destinationstores[ bkpserver ] }}"
    - debug:
        var: destinationstore
    - name: List Qemu VMs
      command: "pvesh ls /nodes/{{ ansible_hostname }}/qemu --output-format json"
      register: qemujson
    - set_fact:
        qemu_id_list: "{{ qemujson.stdout | from_json | json_query(idquery) }}"
      vars:
        idquery: "[].name"
    - debug:
        msg: "{{ qemu_id_list }}"

    - name: List containers
      command: "pvesh ls /nodes/{{ ansible_hostname }}/lxc --output-format json"
      register: lxcjson
    - set_fact:
        lxc_id_list: "{{ lxcjson.stdout | from_json | json_query(idquery) }}"
      vars:
        idquery: "[].name"
    - debug:
        msg: "{{ lxc_id_list }}"

    - set_fact:
        all_id_list: "{{ qemu_id_list + lxc_id_list }}"
    - debug:
        msg: "{{ all_id_list }}"

    - name: "Run vzdump backup to {{ destinationstore }}"
      command: "vzdump {{ item }} --mailnotification always --storage {{ destinationstore }} --mode snapshot --node {{ ansible_hostname }}"
      register: vzdumpoutput
      loop: "{{ all_id_list }}"
    - debug:
        msg: "{{ item.stdout_lines | last }}"
      loop: "{{ vzdumpoutput.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: MQTT publish full output
      mqtt:
        topic: 'backup/vzdump/{{ansible_hostname}}/{{item.item}}/full_output'
        payload: '{{ item | to_json }}'
        server: mosquitto.lan
        retain: yes
      delegate_to: localhost
      loop: "{{ vzdumpoutput.results }}"
      loop_control:
        label: "{{ item.item }}"
    - name: MQTT publish last stdout line
      mqtt:
        topic: 'backup/vzdump/{{ansible_hostname}}/{{item.item}}/last_stdout_line'
        payload: '{{ item.stdout_lines | last }}'
        server: mosquitto.lan
        retain: yes
      delegate_to: localhost
      loop: "{{ vzdumpoutput.results }}"
      loop_control:
        label: "{{ item.item }}"
    - name: MQTT publish last returncode
      mqtt:
        topic: 'backup/vzdump/{{ansible_hostname}}/{{item.item}}/last_returncode'
        payload: '{{ item.rc }}'
        server: mosquitto.lan
        retain: yes
      delegate_to: localhost
      loop: "{{ vzdumpoutput.results }}"
      loop_control:
        label: "{{ item.item }}"

